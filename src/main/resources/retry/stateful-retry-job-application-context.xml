<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- TODO implement statefull -->

    <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName"><value>org.h2.Driver</value></property>
        <property name="url"><value>jdbc:h2:./db/exceptionalDb</value></property>
        <property name="username"><value>sa</value></property>
        <property name="password"><value></value></property>
        <property name="maxIdle"><value>1</value></property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" scope="step">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- JobRepository and JobLauncher are configuration/setup classes -->
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"/>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository"/>
    </bean>

    <bean id="jobListener" class="org.spring.batch.infrastructure.listeners.JobListener">
    </bean>

    <batch:job id="transactionJob" restartable="true">
        <batch:step id="transactionStep">
            <batch:description>Step #1</batch:description>
            <batch:tasklet>
                <batch:chunk commit-interval="500">
                    <batch:reader>
                        <bean class="org.spring.batch.infrastructure.readers.ListItemReader" scope="step">
                        </bean>
                    </batch:reader>
                    <batch:writer>
                        <bean id="interactionsItemWriter" class="org.springframework.batch.item.support.CompositeItemWriter">
                            <property name="delegates">
                                <list>
                                    <bean class="org.spring.batch.infrastructure.writers.ListItemWriter" scope="step">
                                    </bean>
                                </list>
                            </property>
                        </bean>
                    </batch:writer>

                    <batch:processor>
                        <bean class="org.spring.batch.infrastructure.processors.ThrowingExceptionProcessor"/>
                    </batch:processor>
                </batch:chunk>
            </batch:tasklet>
            <batch:end on="COMPLETED"/>
            <batch:next on="FAILED" to="transactionStep" />
            <batch:listeners>
                <batch:listener>
                    <bean class="org.spring.batch.infrastructure.listeners.StepFullListener">
                    </bean>
                </batch:listener>
                <batch:listener>
                    <bean class="org.spring.batch.infrastructure.listeners.JobListener">
                    </bean>
                </batch:listener>
            </batch:listeners>
        </batch:step>

        <batch:listeners>
            <batch:listener>
                <bean class="org.spring.batch.infrastructure.listeners.JobListener">
                </bean>
            </batch:listener>
        </batch:listeners>

        <batch:validator>
            <bean class="org.spring.batch.infrastructure.validators.ParametersValidator"/>
        </batch:validator>
    </batch:job>

    <aop:config>
        <aop:pointcut id="transactional"
                      expression="execution(* org.spring.batch.infrastructure.processors.ThrowingExceptionProcessor.process(..))" />
        <aop:advisor pointcut-ref="transactional"
                     advice-ref="retryAdvice" order="-1" />
    </aop:config>

    <bean id="retryTemplate" class="org.springframework.batch.core.step.item.BatchRetryTemplate">
        <property name="listeners">
            <array>
                <bean class="org.spring.batch.infrastructure.listeners.RetryEventListener" />
            </array>
        </property>
        <property name="retryContextCache">
            <bean class="org.springframework.retry.policy.MapRetryContextCache">
            </bean>
        </property>
        <property name="retryPolicy">
            <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
                <constructor-arg name="maxAttempts" value="2" />
                <constructor-arg name="retryableExceptions">
                    <util:map>
                       <entry key="java.lang.IllegalArgumentException" value="true"/>
                    </util:map>
                </constructor-arg>
            </bean>
        </property>
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.FixedBackOffPolicy">
                <property name="backOffPeriod" value="1000" />
                <property name="sleeper">
                    <bean class="org.spring.batch.infrastructure.retry.LoggingThreadWaitSleeper">
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="retryAdvice" name="retryAdvice" class="org.springframework.retry.interceptor.StatefulRetryOperationsInterceptor">
       <property name="retryOperations" ref="retryTemplate" />
        <property name="recoverer">
            <bean class="org.spring.batch.infrastructure.retry.recoverer.TransactionRecoverer" />
        </property>
        <property name="newItemIdentifier">
            <bean class="org.spring.batch.infrastructure.retry.stateful.TransactionNewMethodArgumentsIdentifier" />
        </property>
        <property name="keyGenerator">
            <bean class="org.spring.batch.infrastructure.retry.stateful.TransactionMethodArgumentsKeyGenerator" />
        </property>
    </bean>

</beans>